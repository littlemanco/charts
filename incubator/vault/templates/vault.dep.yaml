---
# Generated by boilr at Sat, 05 Nov 2016 17:07:02 CET
apiVersion: "extensions/v1beta1"
kind: "Deployment"
metadata:
  labels:
    application: "vault"
    role: "secret-management"
  name: "secret-management"
  namespace: {{ default "default" .Values.namespace | quote }}
spec:
  replicas: 2
  selector:
    matchLabels:
      application: "vault"
      role: "secret-management"
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: "RollingUpdate"
  template:
    metadata:
      labels:
        application: "vault"
        role: "secret-management"
    spec:
      # volumes:
      # - name: "secret-management-etc-conf-d"
      # configMap:
      #   name: "secret-management-etc-conf-d"
      # - name: "secret-management-data"
      #   hostPath:
      #     path: /data/secret-management/
      containers:
      - name: "vault"
        # env:
        # - name: "FOO"
        #   value: "BAR"
        image: {{ default "vault:0.6.2" .Values.vaultContainer | quote }}
        imagePullPolicy: "IfNotPresent"
        # args:
        #   - "command"
        #   - "line" 
        #   - "arguments"
        resources:
          limits:
            cpu: "100m"
            memory: "512Mi"
          requests:
            cpu: "100m"
            memory: "512Mi"
        securityContext:
          privileged: false
          capabilities:
            add:
              - "IPC_LOCK"
        ports:
        - containerPort: 8200
          protocol: "TCP"
          name: "http"
        # volumeMounts:
        # - name: "secret-management-etc-conf-d"
        #   readOnly: true
        #   mountPath: "/etc/secret-management/conf.d"
        # - name: "secret-management-data
        #   readOnly: false
        #   mountPath: "/data"
        livenessProbe:
          # Todo: Liveness should just be TCP. Readiness is when the vault is actually unsealed
          httpGet:
            # Determines whether or not the vault container has booted successfully
            path: "/sys/health"
            port: "http"
          initialDelaySeconds: 5
          timeoutSeconds: 1
        readinessProbe:
          httpGet:
            # Determines whether the vault container is unsealed, and available to serve requests
            path: "/sys/health"
            port: "http"
          initialDelaySeconds: 5
          timeoutSeconds: 1
      restartPolicy: "Always"
      securityContext: {} 
